import{a as o,B as c,ao as s}from"./index-Dg2GFtxE.js";const y=async t=>{try{return(await o.get(`${c}/mcqtopic/v1/getAllMCQTopicByPagination/{pageNumber}/{pageSize}?pageNumber=0&pageSize=10000`,{headers:t})).data}catch(e){throw s.fire("Error","Failed to fetch McqTopic data","error"),e}},m=async(t,e)=>{try{return(await o.post(`${c}/mcqquetions/v1/getMCQDataByMCQDataRequest`,t,{headers:e})).data}catch(r){throw s.fire("Error","Failed to fetch filtered MCQ data","error"),r}},d=async(t,e)=>{var r,i;try{const a=await o.post(`${c}/mcqexam/v1/saveOrUpdateExamHistory`,JSON.stringify(t),{headers:e});return s.fire("Success","Exam history saved successfully","success"),a.data}catch(a){throw s.fire("Error",((i=(r=a.response)==null?void 0:r.data)==null?void 0:i.message)||"Failed to save exam history","error"),a}},u=async(t,e)=>{try{return(await o.get(`${c}/mcqexam/v1/getExamHistoryById/${e}`,{headers:t})).data}catch(r){throw s.fire("Error","Failed to fetch exam history by ID","error"),r}},h=async(t,e)=>{try{return(await o.get(`${c}/mcqexam/v1/getExamHistoriesBySeekerId/${e}`,{headers:t})).data}catch(r){throw s.fire("Error","Failed to fetch exam histories","error"),r}},x=async(t,e)=>{var r,i;try{const a=await o.post(`${c}/mcqexam/v1/saveOrUpdateExamResult`,JSON.stringify(t),{headers:e});return s.fire("Success","Exam result saved successfully","success"),a.data}catch(a){throw s.fire("Error",((i=(r=a.response)==null?void 0:r.data)==null?void 0:i.message)||"Failed to save exam result","error"),a}},g=async(t,e)=>{try{return(await o.get(`${c}/mcqexam/v1/getResultsByExamHistoryId/${e}`,{headers:t})).data}catch(r){throw s.fire("Error","Failed to fetch exam results","error"),r}};export{x as a,u as b,g as c,h as d,y as f,m as g,d as s};
